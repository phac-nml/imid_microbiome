echo "summary.seqs(fasta=merged.fasta, processors=32)
screen.seqs(fasta=merged.fasta, group=mergegroups, summary=merged.summary, maxambig=0, maxlength=275, processors=32)
summary.seqs(fasta=merged.good.fasta, processors=32)
unique.seqs(fasta=current)
summary.seqs(fasta=current, processors=32)
count.seqs(name=merged.good.names, group=mergegroupsgood)
summary.seqs(fasta=merged.good.unique.fasta, count=current, processors=32)
pcr.seqs(fasta=silva.nr_v128.align, oligos=oligos, keepdots=T, processors=32)
system(mv silva.nr_v128.pcr.align silva.v4.fasta)
summary.seqs(fasta=silva.v4.fasta)
align.seqs(fasta=merged.good.unique.fasta, reference=silva.v4.fasta, flip=T, processors=32)
summary.seqs(fasta=current, count=merged.good.count_table, processors=32)
screen.seqs(fasta=merged.good.unique.align, count=merged.good.count_table, summary=merged.good.unique.summary, start=13862, end=23444, maxhomop=8, processors=32)
summary.seqs(fasta=current, count=current, processors=32)
filter.seqs(fasta=merged.good.unique.good.align, vertical=T, trump=.)
unique.seqs(fasta=merged.good.unique.good.filter.fasta, count=merged.good.good.count_table)
pre.cluster(fasta=merged.good.unique.good.filter.unique.fasta, count=merged.good.unique.good.filter.count_table, diffs=2, processors=32)
chimera.uchime(fasta=merged.good.unique.good.filter.unique.precluster.fasta, count=merged.good.unique.good.filter.unique.precluster.count_table, dereplicate=T, processors=32)
remove.seqs(fasta=merged.good.unique.good.filter.unique.precluster.fasta, accnos=merged.good.unique.good.filter.unique.precluster.denovo.uchime.accnos)
summary.seqs(fasta=current, count=merged.good.unique.good.filter.unique.precluster.denovo.uchime.pick.count_table, processors=32)
classify.seqs(fasta=merged.good.unique.good.filter.unique.precluster.pick.fasta, count=merged.good.unique.good.filter.unique.precluster.pick.fasta, count=merged.good.unique.good.filter.unique.precluster.denovo.uchime.pick.count_table, reference=trainset16_022016.rdp.fasta, taxonomy=trainset16_022016.rdp.tax, cutoff=60, processors=32)
remove.lineage(fasta=merged.good.unique.good.filter.unique.precluster.pick.fasta, count=merged.good.unique.good.filter.unique.precluster.denovo.uchime.pick.count_table, taxonomy=current, taxon=Chloroplast-Mitochondria-unknown-Archaea-Eukaryota)
get.groups(count=merged.good.unique.good.filter.unique.precluster.denovo.uchime.pick.pick.count_table, fasta=merged.good.unique.good.filter.unique.precluster.pick.pick.fasta, groups=MOCK.1-MOCK.2-MOCK.3-MOCK.4)
seq.error(fasta=merged.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta,count=merged.good.unique.good.filter.unique.precluster.denovo.uchime.pick.pick.pick.count_table,reference=HMP_MOCK.fasta, aligned=F, processors=32)
dist.seqs(fasta=merged.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta, cutoff=0.20, processors=32)
cluster(column=merged.good.unique.good.filter.unique.precluster.pick.pick.pick.dist, count=merged.good.unique.good.filter.unique.precluster.denovo.uchime.pick.pick.pick.count_table)
make.shared(list=merged.good.unique.good.filter.unique.precluster.pick.pick.pick.an.unique_list.list, count=merged.good.unique.good.filter.unique.precluster.denovo.uchime.pick.pick.pick.count_table, label=0.03)
rarefaction.single(shared=merged.good.unique.good.filter.unique.precluster.pick.pick.pick.an.unique_list.shared)
remove.groups(count=merged.good.unique.good.filter.unique.precluster.denovo.uchime.pick.pick.count_table, fasta=merged.good.unique.good.filter.unique.precluster.pick.pick.fasta, taxonomy=current, groups=MOCK.1-MOCK.2-MOCK.3-MOCK.4)
cluster.split(fasta=merged.good.unique.good.filter.unique.precluster.pick.pick.fasta, count=merged.good.unique.good.filter.unique.precluster.denovo.uchime.pick.pick.count_table, taxonomy=merged.good.unique.good.filter.unique.precluster.pick.rdp.wang.pick.taxonomy, splitmethod=classify, taxlevel=6, processors=32, method=agc)
make.shared(list=current, count=current, label=0.03)
classify.otu(list=current, count=current, taxonomy=current, label=0.03)"|/share/apps/mothur/mothur
